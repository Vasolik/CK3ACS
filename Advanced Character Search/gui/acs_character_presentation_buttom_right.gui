types acs_character_presentation_buttom_right_types {

    type acs_claims_widget = widget {
        datacontext = "[Scope.GetCharacter]" 
        size = { 70 60 }

        visible = "[Character.MakeScope.Var( 'acs_best_claim' ).IsSet]"
        
        coa_title_tiny_crown = {
            parentanchor = vcenter
            widgetanchor = vcenter
            
            scale = 0.8

            tooltipwidget = {
                acs_claim_tooltip = {}
            }
            using = tooltip_nw

            blockoverride "coa_button" {
                datacontext = "[Character.MakeScope.Var( 'acs_best_claim' ).Title]"
                onclick = "[DefaultOnCoatOfArmsClick(Title.GetID)]"
                onrightclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
                button_ignore = none
            }

            highlight_icon = {
                name = "pressed_claim"
                visible = "[Character.MakeScope.Var( 'acs_is_top_claim_pressed' ).IsSet]"
                texture = "gfx/interface/icons/title_status/icon_claim_pressed.dds"
                size = { 24 24 }
                parentanchor = bottom|right
            }

            highlight_icon = {
                name = "unpressed_claim"
                visible = "[And( Not(Character.MakeScope.Var( 'acs_is_top_claim_pressed' ).IsSet), Character.MakeScope.Var( 'acs_is_top_claim_explicit' ).IsSet )]"
                texture = "gfx/interface/icons/title_status/icon_claim_unpressed.dds"
                size = { 24 24 }
                parentanchor = bottom|right
            }

            highlight_icon = {
                name = "implicit_claim"
                visible = "[And( Not(Character.MakeScope.Var( 'acs_is_top_claim_pressed' ).IsSet), Not(Character.MakeScope.Var( 'acs_is_top_claim_explicit' ).IsSet) )]"
                texture = "gfx/interface/icons/title_status/icon_claim_implicit.dds"
                size = { 24 24 }
                parentanchor = bottom|right
            }
        }
        widget = {
            size = { 40 60 }
            parentanchor = top|right
            widgetanchor = top|right
            
            widget = {
                size = { 40 30 }
                widget = {
                    parentanchor = vcenter|right
                    widgetanchor = vcenter|right
                    size = { 20 30 }
                    text_single = {
                        parentanchor = center
                        widgetanchor = center
                        text = "[Character.MakeScope.Var( 'acs_total_claim_kingdom' ).GetValue|0]"
                        default_format = "#high"
                        using = Font_Size_Medium
                        align = center
                    }
                    using = tooltip_nw
                    tooltipwidget = {
                        acs_claim_tooltip = {
                            blockoverride "acs_tier_visibility" {
                                visible = "[EqualTo_int32(Title.GetTierFrame, '(int32)5')]" #King Rank
                            }
                            blockoverride "acs_claim_tooltip_caption" {
                                text = "acs_claim_tooltip_kingdom"
                            }
                        }
                    }
                }

                widget = {
                    parentanchor = vcenter|left
                    widgetanchor = vcenter|left
                    size = { 20 30 }
                    text_single = {
                        parentanchor = center
                        widgetanchor = center
                        text = "[Character.MakeScope.Var( 'acs_total_claim_empire' ).GetValue|0]"
                        default_format = "#high"
                        using = Font_Size_Medium
                        align = center
                    }
                    using = tooltip_nw
                    tooltipwidget = {
                        acs_claim_tooltip = {
                            blockoverride "acs_tier_visibility" {
                                visible = "[EqualTo_int32(Title.GetTierFrame, '(int32)6')]" #Empire Rank
                            }
                            blockoverride "acs_claim_tooltip_caption" {
                                text = "acs_claim_tooltip_empire"
                            }
                        }
                    }
                }
            }

            widget = {
                size = { 40 30 }
                parentanchor = bottom|right
                widgetanchor = bottom|right

                widget = {
                    parentanchor = vcenter|right
                    widgetanchor = vcenter|right
                    size = { 20 30 }
                    text_single = {
                        parentanchor = center
                        widgetanchor = center
                        text = "[Character.MakeScope.Var( 'acs_total_claim_county' ).GetValue|0]"
                        default_format = "#high"
                        using = Font_Size_Medium
                        align = center
                    }
                    using = tooltip_nw
                    tooltipwidget = {
                        acs_claim_tooltip = {
                            blockoverride "acs_tier_visibility" {
                                visible = "[EqualTo_int32(Title.GetTierFrame, '(int32)3')]" #Count Rank
                            }
                            blockoverride "acs_claim_tooltip_caption" {
                                text = "acs_claim_tooltip_county"
                            }
                        }
                    }
                    
                }

                widget = {
                    
                    parentanchor = vcenter|left
                    widgetanchor = vcenter|left
                    size = { 20 30 }
                    text_single = {
                        parentanchor = center
                        widgetanchor = center
                        text = "[Character.MakeScope.Var( 'acs_total_claim_duchy' ).GetValue|0]"
                        default_format = "#high"
                        using = Font_Size_Medium
                        align = center
                    }
                    using = tooltip_nw
                    tooltipwidget = {
                        acs_claim_tooltip = {
                            blockoverride "acs_tier_visibility" {
                                visible = "[EqualTo_int32(Title.GetTierFrame, '(int32)4')]" #Duke Rank
                            }
                            blockoverride "acs_claim_tooltip_caption" {
                                text = "acs_claim_tooltip_duchy"
                            }
                        }
                    }
                }
            }
        }
    }

    type acs_heritate_widget = widget {    
        size = { 90 60 }
        parentanchor = vcenter
        widgetanchor = vcenter

        visible = "[Character.MakeScope.Var( 'acs_best_heritage' ).IsSet]"

        coa_title_tiny_crown = {
            
            parentanchor = vcenter
            widgetanchor = vcenter
            scale = 0.8

            tooltipwidget = {
                acs_heritage_tooltip = {}
            }
            using = tooltip_nw


            blockoverride "coa_button" {
                datacontext = "[Character.MakeScope.Var( 'acs_best_heritage' ).Title]"
                onclick = "[DefaultOnCoatOfArmsClick(Title.GetID)]"
                onrightclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
                button_ignore = none
            }
        }

        widget = {
            size = { 60 60 }
            parentanchor = top|right
            widgetanchor = top|right
            
            widget = {
                size = { 60 30 }

                widget = {
                    parentanchor = vcenter|left
                    widgetanchor = vcenter|left
                    size = { 20 30 }
                    text_single = {
                        parentanchor = center
                        widgetanchor = center
                        text = "[Character.MakeScope.Var( 'acs_total_heritage_empire' ).GetValue|0]"
                        default_format = "#high"
                        using = Font_Size_Medium
                        align = center
                    }
                    using = tooltip_nw
                    tooltipwidget = {
                        acs_heritage_tooltip = {
                            blockoverride "acs_tier_visibility" {
                                visible = "[EqualTo_int32(Title.GetTierFrame, '(int32)6')]" #Empire Rank
                            }
                            blockoverride "acs_claim_tooltip_caption" {
                                text = "acs_heritage_tooltip.empire"
                            }
                        }
                    }
                }

                widget = {
                    parentanchor = center
                    widgetanchor = center
                    size = { 20 30 }
                    text_single = {
                        parentanchor = center
                        widgetanchor = center
                        text = "[Character.MakeScope.Var( 'acs_total_heritage_kingdom' ).GetValue|0]"
                        default_format = "#high"
                        using = Font_Size_Medium
                        align = center
                    }
                    using = tooltip_nw
                    tooltipwidget = {
                        acs_heritage_tooltip = {
                            blockoverride "acs_tier_visibility" {
                                visible = "[EqualTo_int32(Title.GetTierFrame, '(int32)5')]" #King Rank
                            }
                            blockoverride "acs_claim_tooltip_caption" {
                                text = "acs_heritage_tooltip.kingdom"
                            }
                        }
                    }
                }

                widget = {
                    parentanchor = vcenter|right
                    widgetanchor = vcenter|right
                    size = { 20 30 }
                    text_single = {
                        parentanchor = center
                        widgetanchor = center
                        text = "[Character.MakeScope.Var( 'acs_total_heritage_duchy' ).GetValue|0]"
                        default_format = "#high"
                        using = Font_Size_Medium
                        align = center
                    }
                    using = tooltip_nw
                    tooltipwidget = {
                        acs_heritage_tooltip = {
                            blockoverride "acs_tier_visibility" {
                                visible = "[EqualTo_int32(Title.GetTierFrame, '(int32)4')]" #Duchy Rank
                            }
                            blockoverride "acs_claim_tooltip_caption" {
                                text = "acs_heritage_tooltip.duchy"
                            }
                        }
                    }
                }
            }

            
            widget = {
                size = { 60 30 }
                parentanchor = bottom|right
                widgetanchor = bottom|right
                widget = {
                    parentanchor = vcenter|left
                    widgetanchor = vcenter|left
                    size = { 30 30 }
                    text_single = {
                        parentanchor = center
                        widgetanchor = center
                        text = "[Character.MakeScope.Var( 'acs_total_heritage_county' ).GetValue|0]"
                        default_format = "#high"
                        using = Font_Size_Medium
                        align = center
                    }
                    using = tooltip_nw
                    tooltipwidget = {
                        acs_heritage_tooltip = {
                            blockoverride "acs_tier_visibility" {
                                visible = "[EqualTo_int32(Title.GetTierFrame, '(int32)3')]" #Count Rank
                            }
                            blockoverride "acs_claim_tooltip_caption" {
                                text = "acs_heritage_tooltip.county"
                            }
                        }
                    }
                }

                widget = {
                    parentanchor = vcenter|right
                    widgetanchor = vcenter|right
                    size = { 30 30 }
                    text_single = {
                        parentanchor = center
                        widgetanchor = center
                        text = "[Character.MakeScope.Var( 'acs_total_heritage_barony' ).GetValue|0]"
                        default_format = "#high"
                        using = Font_Size_Medium
                        align = center
                    }
                    using = tooltip_nw
                    tooltipwidget = {
                        acs_heritage_tooltip = {
                            blockoverride "acs_tier_visibility" {
                                visible = "[LessThanOrEqualTo_int32(Title.GetTierFrame, '(int32)2')]" #Barony Rank
                            }
                            blockoverride "acs_claim_tooltip_caption" {
                                text = "acs_heritage_tooltip.barony"
                            }
                        }
                    }
                }
            }
        }
    }

    type acs_faith_and_piety = button {
        size = { 60 60 }
        onclick = "[OpenGameViewData( 'faith', Faith.GetID )]"
        button_religion_icon = {
            datacontext = "[Character.GetFaith]"
            size = { 35 35 }
            position = { 10 0 }
        }
        widget = {
            size = { 55 25 }
            position = { 0 35 }
            icon = {
                size = { 25 25 }
                texture = "[Character.GetPietyLevelTexture]"
            }
            text_single = {
                text = "[Character.GetPiety|0]"
                fontsize_min = 9.5
                max_width = 30  
                size = { 30 25 } 
                align = nobaseline
                parentanchor = vcenter|right
                widgetanchor = vcenter|right
            }
            tooltip = "[Character.GetPietyTooltipWithBalance]"
        }     
    }

    type acs_culture_prestige_and_gold = widget  {
        
        size = { 170 60 }

        button_standard_hover = {
            onclick = "[OpenGameViewData( 'culture_window', Culture.GetID )]"
            datacontext = "[Character.GetCulture]"
            size = { 170 35 }
            icon = {
                texture = "gfx/interface/icons/icon_culture.dds"
                size = { 35 35 }
                parentanchor = vcenter|left
                widgetanchor = vcenter|left
            }
            
            text_single = {
                layoutpolicy_horizontal = expanding
                text = "CULTURE_LISTS_WINDOW"
                autoresize = yes
                align = nobaseline
                position = { 35 0}
                max_width = 105
                parentanchor = vcenter|left
                widgetanchor = vcenter|left
            }

            tooltipwidget = {
                culture_tooltip = {}
            }
            using = tooltip_se
        }
        widget = {
            size = { 55 25 }
            position = { 0 35 }
            icon = {
                size = { 25 25 }
                texture = "[Character.GetPrestigeLevelTexture]"
            }
            text_single = {
                text = "[Character.GetPrestige|0]"
                fontsize_min = 9.5
                max_width = 30  
                size = { 30 25 } 
                align = nobaseline
                parentanchor = vcenter|right
                widgetanchor = vcenter|right
            }
            tooltip = "[Character.GetPrestigeTooltipWithBalance]"
        }

        widget = {
            size = { 60 25 }
            position = { 65 35 }
            icon = {
                size = { 25 25 }
                texture = "gfx/interface/icons/icon_gold.dds"
            }
            text_single = {
                text = "[Character.GetGold|0]"
                fontsize_min = 9.5
                max_width = 30  
                size = { 30 25 } 
                align = nobaseline
                parentanchor = vcenter|right
                widgetanchor = vcenter|right
            }
            tooltip = "[Character.GetGoldTooltipWithBalance]"            
        } 
        widget = {
            size = { 30 25 }
            position = { 128 35 }
            text_single = {
                text = "[Character.GetBalance|1+=]"
                align = top
                fontsize_min = 9.5
                fontsize = 12.5
                max_width = 30
                parentanchor = top|left
                widgetanchor = top|left
                visible = "[NotEqualTo_CFixedPoint(Character.GetBalance, '(CFixedPoint)0')]"
            }
            using = tooltip_nw
            tooltipwidget = {
                acs_balance_tooltip = {}
            }
        } 
    }
    type acs_balance_tooltip = container {
        using = GeneralTooltipSetup
        
        ignoreinvisible = yes
        alwaystransparent = no
        widget = {
            name = "background"
            using = DefaultTooltipBackground
            size = { 100% 100% }
            alwaystransparent = no
        }

        scrollbox = {
            visible = "[NotEqualTo_CFixedPoint(Character.GetBalance, '(CFixedPoint)0')]"
            layoutpolicy_vertical = expanding
            layoutpolicy_horizontal = expanding
            size = { 420 400 }
            blockoverride "scrollbox_replace_vbox" {
                flowcontainer = {
                    margin = { 20 20 }
                    text_multi = {
                        text = "[Character.GetBalanceBreakdown]"
                        align = left
                        autoresize = yes
                        maximumsize = { 400 -1 }
                    }
                    
                }
            }
        }
        widget = {
            size = {200 120}
            text_multi = {
                position = {20 20 }
                visible = "[EqualTo_CFixedPoint(Character.GetBalance, '(CFixedPoint)0')]"
                text = "[Character.GetBalanceBreakdown]"
                align = left
                autoresize = yes
                maximumsize = { 200 -1 }
            }
        }
    }

    type acs_character_buttom_right = widget {
        datacontext = "[Scope.GetCharacter]"
        layoutpolicy_horizontal = expanding
        layoutpolicy_vertical = expanding
        size = { 400 60 }

        
        flowcontainer = {
            background = {
                using = Background_Area_Dark
                color = { 0.1 0.1 0.1  0.7 }
            }
            acs_heritate_widget = {    }
        }
        
        acs_claims_widget = {
            position = { 90 0 }
        }

        # Religion and culture
        widget = {
            size= { 240 60 }
            position = { 160 0 }
            background = {
                using = Background_Area_Dark
                alpha = 0.5
                margin = { 0 2 }
            }
            acs_faith_and_piety = {
                position = { 5 0 }
            }
            acs_culture_prestige_and_gold = {
                position = { 70 0 }
            }
        }
    }

    type acs_claim_tooltip = flowcontainer {
        alwaystransparent = no
        
        using = DefaultTooltipBackground
        
        flowcontainer = {
            margin = { 20 20 }
            layoutpolicy_horizontal = expanding
            direction = vertical
            text_single = {
                autoresize = yes
                margin = { 10 0 }
                block "acs_claim_tooltip_caption" {
                    text = "acs_claim_tooltip"
                }
                
                default_format = "#clickable"
                
            }
            flowcontainer = {
                acs_claim_tooltip_list = {
                    blockoverride "acs_claim_tooltip_list_visibility" {
                        visible = "[DataModelHasItems(Character.MakeScope.GetList('acs_pressed_claim_list'))]"
                    }
                    blockoverride "acs_claim_tooltip_list_caption" {
                        text = "[pressed_claim|E]"
                    }
                    blockoverride "acs_claim_tooltip_list_datamodel" {
                        datamodel = "[Character.MakeScope.GetList('acs_pressed_claim_list')]"
                    }
                    blockoverride "acs_claim_tooltip_list_element_text" {
                        text = "[pressed_claim_i][Title.GetName]"
                    }
                }
                acs_claim_tooltip_list = {
                    blockoverride "acs_claim_tooltip_list_visibility" {
                        visible = "[DataModelHasItems(Character.MakeScope.GetList('acs_unpressed_claim_list'))]"
                    }
                    blockoverride "acs_claim_tooltip_list_caption" {
                        text = "[unpressed_claim|E]"
                    }
                    blockoverride "acs_claim_tooltip_list_datamodel" {
                        datamodel = "[Character.MakeScope.GetList('acs_unpressed_claim_list')]"
                    }
                    blockoverride "acs_claim_tooltip_list_element_text" {
                        text = "[unpressed_claim_i][Title.GetName]"
                    }
                }
                acs_claim_tooltip_list = {
                    blockoverride "acs_claim_tooltip_list_visibility" {
                        visible = "[DataModelHasItems(Character.MakeScope.GetList('acs_implicit_claim_list'))]"
                    }
                    blockoverride "acs_claim_tooltip_list_caption" {
                        text = "[implicit_claim|E]"
                    }
                    blockoverride "acs_claim_tooltip_list_datamodel" {
                        datamodel = "[Character.MakeScope.GetList('acs_implicit_claim_list')]"
                    }
                    blockoverride "acs_claim_tooltip_list_element_text" {
                        text = "[implicit_claim_i][Title.GetName]"
                    }
                }
            }
        }
    }

    type acs_claim_tooltip_list = flowcontainer  {
        direction = vertical
        ignoreinvisible = yes
        margin = { 20 20 }
        spacing = 4
        block "acs_claim_tooltip_list_visibility" {}
        widget = {
            size = { 200 25 }
            text_single = {
                block "acs_claim_tooltip_list_caption" {}
            }
        }
        
        flowcontainer = {
            layoutpolicy_horizontal = expanding
            layoutpolicy_vertical = expanding
            direction = vertical
            ignoreinvisible = yes
            block "acs_claim_tooltip_list_datamodel" {}
            item = {
                widget = {
                    datacontext = "[Scope.Title]"
                    block "acs_tier_visibility" {}
                    size = { 200 25 }
                    text_single = {
                        autoresize = yes
                        block "acs_claim_tooltip_list_element_text" {}
                        default_format = "#clickable"
                    }
                }
            }
        }
    } 

    type acs_heritage_tooltip = flowcontainer {
        alwaystransparent = no
        
        using = DefaultTooltipBackground
        
        flowcontainer = {
            margin = { 20 20 }
            layoutpolicy_horizontal = expanding
            direction = vertical
            text_single = {
                autoresize = yes
                margin = { 10 0 }
                block "acs_claim_tooltip_caption" {
                    text = "acs_heritage_tooltip"
                }
                
                default_format = "#clickable"
                
            }
            flowcontainer = {
                acs_heritage_tooltip_list = {
                    blockoverride "acs_claim_tooltip_list_visibility" {
                        visible = "[DataModelHasItems(Character.MakeScope.GetList('acs_heir_to_title_list'))]"
                    }
                    blockoverride "acs_claim_tooltip_list_caption" {
                        text = "acs_heritage_tooltip.heir"
                    }
                    blockoverride "acs_claim_tooltip_list_datamodel" {
                        datamodel = "[Character.MakeScope.GetList('acs_heir_to_title_list')]"
                    }
                }
                acs_heritage_tooltip_list = {
                    blockoverride "acs_claim_tooltip_list_visibility" {
                        visible = "[DataModelHasItems(Character.MakeScope.GetList('acs_2nd_to_title_list'))]"
                    }
                    blockoverride "acs_claim_tooltip_list_caption" {
                        text = "acs_heritage_tooltip.2nd"
                    }
                    blockoverride "acs_claim_tooltip_list_datamodel" {
                        datamodel = "[Character.MakeScope.GetList('acs_2nd_to_title_list')]"
                    }
                }
                acs_heritage_tooltip_list = {
                    blockoverride "acs_claim_tooltip_list_visibility" {
                        visible = "[DataModelHasItems(Character.MakeScope.GetList('acs_3rd_to_title_list'))]"
                    }
                    blockoverride "acs_claim_tooltip_list_caption" {
                        text = "acs_heritage_tooltip.3rd"
                    }
                    blockoverride "acs_claim_tooltip_list_datamodel" {
                        datamodel = "[Character.MakeScope.GetList('acs_3rd_to_title_list')]"
                    }
                }
                acs_heritage_tooltip_list = {
                    blockoverride "acs_claim_tooltip_list_visibility" {
                        visible = "[DataModelHasItems(Character.MakeScope.GetList('acs_4th_to_title_list'))]"
                    }
                    blockoverride "acs_claim_tooltip_list_caption" {
                        text = "acs_heritage_tooltip.4th"
                    }
                    blockoverride "acs_claim_tooltip_list_datamodel" {
                        datamodel = "[Character.MakeScope.GetList('acs_4th_to_title_list')]"
                    }
                }

                acs_heritage_tooltip_list = {
                    blockoverride "acs_claim_tooltip_list_visibility" {
                        visible = "[DataModelHasItems(Character.MakeScope.GetList('acs_other_heritage_list'))]"
                    }
                    blockoverride "acs_claim_tooltip_list_caption" {
                        text = "acs_heritage_tooltip.pretender"
                    }
                    blockoverride "acs_claim_tooltip_list_datamodel" {
                        datamodel = "[Character.MakeScope.GetList('acs_other_heritage_list')]"
                    }
                }
            }
        }
    }

    type acs_heritage_tooltip_list = flowcontainer  {
        direction = vertical
        ignoreinvisible = yes
        margin = { 20 20 }
        spacing = 4
        block "acs_claim_tooltip_list_visibility" {}
        widget = {
            size = { 200 25 }
            text_single = {
                block "acs_claim_tooltip_list_caption" {}
            }
        }
        
        flowcontainer = {
            layoutpolicy_horizontal = expanding
            layoutpolicy_vertical = expanding
            direction = vertical
            ignoreinvisible = yes
            block "acs_claim_tooltip_list_datamodel" {}
            item = {
                widget = {
                    datacontext = "[Scope.Title]"
                    block "acs_tier_visibility" {}
                    size = { 200 30 }
                    coa_title_tiny_crown = {
                        parentanchor = vcenter
                        widgetanchor = vcenter
                        scale = 0.8

                        blockoverride "coa_button" {
                            onclick = "[DefaultOnCoatOfArmsClick(Title.GetID)]"
                            onrightclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
                            button_ignore = none
                        }
                    }
                    text_single = {
                        position = { 40 0 }
                        parentanchor = vcenter
                        widgetanchor = vcenter
                        autoresize = yes
                        text = "[Title.GetName]"
                        default_format = "#clickable"
                    }
                }
            }
        }
    } 
}
